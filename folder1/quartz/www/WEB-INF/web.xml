<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Id -->
<!DOCTYPE web-app
    PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">
<web-app> 
    <display-name>Quartz Web app</display-name>
    <description>Quartz Web app</description>
    <context-param>
        <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
        <param-value>ApplicationResources</param-value>
    </context-param>
 
    <!--
      - Key of the system property that should specify the root directory of this
      - web app. Applied by WebAppRootListener or Log4jConfigListener.
      -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>quartz.root</param-value>
    </context-param>

    <!--
      - Location of the Log4J config file, for initialization and refresh checks.
      - Applied by Log4jConfigListener.
      -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>/WEB-INF/log4j.xml</param-value>
    </context-param>
 
   <filter>
      <filter-name>Security Filter</filter-name>
      <filter-class>org.securityfilter.filter.SecurityFilter</filter-class>
      <init-param>
         <param-name>config</param-name>
         <param-value>/WEB-INF/securityfilter-config.xml</param-value>
         <description>Configuration file location (this is the default value)</description>
      </init-param>
      <init-param>
         <param-name>validate</param-name>
         <param-value>true</param-value>
         <description>Validate config file if set to true</description>
      </init-param>
   </filter>
    
   <filter>
    <filter-name>container</filter-name>
    <filter-class>com.opensymphony.webwork.lifecycle.RequestLifecycleFilter</filter-class>
  </filter>
  
    <filter> 
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>
 
   <!-- map all requests to the SecurityFilter, control what it does with configuration settings -->
   <filter-mapping>
      <filter-name>Security Filter</filter-name>
      <url-pattern>/*</url-pattern>
   </filter-mapping>
 
  
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
   
  <filter-mapping>
    <filter-name>container</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping> 

  <listener>
    <listener-class>com.opensymphony.webwork.lifecycle.ApplicationLifecycleListener</listener-class>
  </listener>
  <listener>
    <listener-class>com.opensymphony.webwork.lifecycle.SessionLifecycleListener</listener-class>
  </listener>

    <!--
      - Configures Log4J for this web app.
      - As this context specifies a context-param "log4jConfigLocation", its file path
      - is used to load the Log4J configuration, including periodic refresh checks.
      -
      - Would fall back to default Log4J initialization (non-refreshing) if no special
      - context-params are given.
      -
      - Exports a "web app root key", i.e. a system property that specifies the root
      - directory of this web app, for usage in log file paths.
      - This web app specifies "petclinic.root" (see log4j.properties file).
      -->
    <!-- Leave the listener commented-out if using JBoss -->
    
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
 
    <servlet>
        <servlet-name>context</servlet-name>
        <servlet-class>org.springframework.web.context.ContextLoaderServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>


    
   <servlet>
    <servlet-name>webwork</servlet-name>
    <servlet-class>com.opensymphony.webwork.dispatcher.ServletDispatcher</servlet-class>
  </servlet>

  <servlet>
    <servlet-name>velocity</servlet-name>
    <servlet-class>com.opensymphony.webwork.views.velocity.WebWorkVelocityServlet</servlet-class>
      <init-param>
      <param-name>org.apache.velocity.properties</param-name>
      <param-value>/WEB-INF/velocity.properties</param-value>
    </init-param>
    <load-on-startup>3</load-on-startup>
  </servlet>
 
  <servlet>
    <servlet-name>Log4jAdminServlet</servlet-name>
    <servlet-class>org.apache.log4j.servlet.ConfigurationServlet</servlet-class>
  </servlet>
  <servlet>
      <servlet-name>DefinitionInitializer</servlet-name>
      <servlet-class>org.quartz.ui.web.init.DefinitionInitializer</servlet-class>
      <init-param>
          <param-name>definition-file</param-name>
          <param-value>(PATH_TO_DEFINITIONS_FILE)</param-value>
          <!-- 
              if (PATH_TO_DEFINITIONS_FILE) is left as such, definitions are loaded from 
               /WEB-INF/classes/JobDefinitions.xml 
           -->    
      </init-param> 
      <load-on-startup>2</load-on-startup>
</servlet>  
  <servlet>
          <servlet-name>InitServlet</servlet-name>
          <servlet-class>com.eggtheory.brainfuse.curriculum.InitServlet</servlet-class>
          <load-on-startup>1</load-on-startup>
    </servlet>
       
        <!--
    <servlet>
        <servlet-name>context</servlet-name>
        <servlet-class>org.springframework.web.context.ContextLoaderServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    -->

    
   

   <servlet-mapping>
    <servlet-name>velocity</servlet-name>
    <url-pattern>*.vm</url-pattern>
  </servlet-mapping>
 
   <servlet-mapping>
    <servlet-name>webwork</servlet-name>
    <url-pattern>*.action</url-pattern>
  
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>Log4jAdminServlet</servlet-name>
    <url-pattern>/Log4jAdmin</url-pattern>
  </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.vm</welcome-file>
    </welcome-file-list>


   <taglib>
        <taglib-uri>sitemesh-page</taglib-uri>
        <taglib-location>/WEB-INF/tlds/sitemesh-page.tld</taglib-location>
    </taglib>

    <taglib>
        <taglib-uri>sitemesh-decorator</taglib-uri>
        <taglib-location>/WEB-INF/tlds/sitemesh-decorator.tld</taglib-location>
    </taglib>

    <taglib>
        <taglib-uri>c</taglib-uri>
        <taglib-location>/WEB-INF/tlds/c.tld</taglib-location>
    </taglib>
    
      <taglib>
        <taglib-uri>fmt</taglib-uri>
        <taglib-location>/WEB-INF/tlds/fmt.tld</taglib-location>
    </taglib>
   
    <taglib>
        <taglib-uri>webwork</taglib-uri>
        <taglib-location>/WEB-INF/tlds/webwork.tld</taglib-location>
    </taglib>

</web-app>
